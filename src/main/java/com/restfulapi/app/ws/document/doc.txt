                             ==========Service=====
         We mark beans with @Service to indicate that it’s holding the business logic.
          So there’s no any other specialty except using it in the service layer.


                                =======Entity=====
          @Entity annotation defines that a class can be mapped to a table.
          And that is it, it is just a marker, like for example Serializable interface.

          And why @Entity annotation is mandatory? ... well, it is the way how JPA is designed.
          When you create a new entity you have to do at least two things

          1. annotated it with @Entity

          2. create an id field and annotate it with @Id

     Anything else is optional, for example table name is derived from entity class name
     (and therefore @Table annotation can be optional),table's columns are derived from
     entities variables (and therefore @Column annotation can be optional), and so on ...


                            ====== @Repository=====
                   @Repository’s job is to catch persistence specific exceptions
                   and rethrow them as one of Spring’s unified unchecked exception.


                              ==========3.1. @Component======
     We can use @Component across the application to mark the beans as Spring’s managed components.

              @Service and @Repository are special cases of @Component.
              They are technically the same but we use them for the different purposes.

              @Service, @Controller, @Repository = {@Component + some more special functionality}
                   ┌────────────┬─────────────────────────────────────────────────────┐
                   │ Annotation │ Meaning                                             │
                   ├────────────┼─────────────────────────────────────────────────────┤
                   │ @Component │ generic stereotype for any Spring-managed component │
                   │ @Repository│ stereotype for persistence layer                    │
                   │ @Service   │ stereotype for service layer                        │
                   │ @Controller│ stereotype for presentation layer (spring-mvc)      │
                   └────────────┴─────────────────────────────────────────────────────┘